<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ab4a5541-127a-4973-8afc-4b293e252f56" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.vscode/settings.json" beforeDir="false" afterPath="$PROJECT_DIR$/.vscode/settings.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/Lottery.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/Lottery.sol" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="JsBowerSettings">
    <node-interpreter value="project" />
    <bower-package value="" />
    <bower.json value="" />
  </component>
  <component name="JsFlowSettings">
    <service-enabled>true</service-enabled>
    <exe-path />
    <other-services-enabled>true</other-services-enabled>
    <auto-save>true</auto-save>
  </component>
  <component name="KubernetesApiPersistence">
    <option name="context" value="docker-desktop" />
    <option name="namespace" value="default" />
  </component>
  <component name="ProjectId" id="1l9lTZyxrtpodqOdVzku17OWWZz" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="dart.analysis.tool.window.visible" value="false" />
    <property name="javascript.nodejs.core.library.configured.version" value="14.5.0" />
    <property name="javascript.nodejs.core.library.typings.version" value="14.14.10" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.standard" value="project" />
    <property name="node.js.path.for.package.stylelint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.standard" value="" />
    <property name="node.js.selected.package.stylelint" value="" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs.mocha.mocha_node_package_dir" value="$PROJECT_DIR$/node_modules/mocha" />
    <property name="nodejs_interpreter_path" value="node" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="prettierjs.PrettierConfiguration.Package" value="$USER_HOME$/.nvm/versions/node/v14.5.0/lib/node_modules/prettier" />
    <property name="project.structure.last.edited" value="SDKs" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="settings.editor.selected.configurable" value="editor.preferences.fonts.default" />
    <property name="typescript.add.unambiguous.imports.on.the.fly" value="true" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RunManager" selected="Mocha.Lottery Contract.should send money to the winner and reset the players pool">
    <configuration name="Lottery Contract" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options />
      <test-kind>SUITE</test-kind>
      <test-file>$PROJECT_DIR$/test/Lottery.test.js</test-file>
      <test-names>
        <name value="Lottery Contract" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Lottery Contract.should correctly add a player to the players pool" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options />
      <test-kind>TEST</test-kind>
      <test-file>$PROJECT_DIR$/test/Lottery.test.js</test-file>
      <test-names>
        <name value="Lottery Contract" />
        <name value="should correctly add a player to the players pool" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Lottery Contract.should correctly add multiple players to the players pool" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options />
      <test-kind>TEST</test-kind>
      <test-file>$PROJECT_DIR$/test/Lottery.test.js</test-file>
      <test-names>
        <name value="Lottery Contract" />
        <name value="should correctly add multiple players to the players pool" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Lottery Contract.should require a minimum amount of ether to enter" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options />
      <test-kind>TEST</test-kind>
      <test-file>$PROJECT_DIR$/test/Lottery.test.js</test-file>
      <test-names>
        <name value="Lottery Contract" />
        <name value="should require a minimum amount of ether to enter" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Lottery Contract.should send money to the winner and reset the players pool" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options />
      <test-kind>TEST</test-kind>
      <test-file>$PROJECT_DIR$/test/Lottery.test.js</test-file>
      <test-names>
        <name value="Lottery Contract" />
        <name value="should send money to the winner and reset the players pool" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Mocha.Lottery Contract.should send money to the winner and reset the players pool" />
        <item itemvalue="Mocha.Lottery Contract.should require a minimum amount of ether to enter" />
        <item itemvalue="Mocha.Lottery Contract" />
        <item itemvalue="Mocha.Lottery Contract.should correctly add multiple players to the players pool" />
        <item itemvalue="Mocha.Lottery Contract.should correctly add a player to the players pool" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ab4a5541-127a-4973-8afc-4b293e252f56" name="Default Changelist" comment="" />
      <created>1607017197421</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1607017197421</updated>
      <workItem from="1607017198854" duration="271000" />
      <workItem from="1607017496697" duration="57000" />
      <workItem from="1607017583868" duration="26000" />
      <workItem from="1607017620369" duration="1114000" />
      <workItem from="1607019344681" duration="1206000" />
      <workItem from="1607020568081" duration="3032000" />
      <workItem from="1607024072155" duration="1441000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
</project>